public static function getBreadContainer($params) {
        extract($params);
        $route_params = \Route::current()->parameters();
        $tmp = new \stdClass();
        $tmp->title = $v;
        /*
        list($containers,$items)=params2ContainerItem();
        $container_i=collect($containers)->search($k);
        ddd($containers);
        ddd($container_i.' '.$k);
        */
        $container_i = str_replace('container', '', $k) * 1;
        $route_piece = [];
        if (in_admin()) {
            $route_piece[] = 'admin';
        }
        for ($i = 0; $i <= $container_i; ++$i) {
            $route_piece[] = 'container'.$i;
        }
        $route_piece[] = 'index';
        $route_name = implode('.', $route_piece);
        //ddd($route_name);
        $currentQueries = request()->query();
        //ddd($currentQueries);
        $tmp->url = route($route_name, array_merge($route_params, $currentQueries));

        return $tmp;
    }

    public static function getBreadLang($params) {
        extract($params);
        $tmp = new \stdClass();
        $tmp->title = $v;
        $tmp->url = '#######';

        return $tmp;
    }

    public static function getBreadModule($params) {
        extract($params);
        $tmp = new \stdClass();
        $tmp->title = $v;
        $tmp->url = route('admin.index', [$v]);

        return $tmp;
    }

    public static function getBread($params) {
        extract($params);
        $pattern = '/[0-9]+/';

        $k1 = (preg_replace($pattern, '', $k));
        $func = 'getBread'.Str::studly($k1);

        return self::$func($params);
    }
